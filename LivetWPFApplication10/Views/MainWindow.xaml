<Window
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
        xmlns:ei="http://schemas.microsoft.com/expression/2010/interactions"
        xmlns:l="http://schemas.livet-mvvm.net/2011/wpf"
        xmlns:v="clr-namespace:LivetWPFApplication10.Views"
        xmlns:vm="clr-namespace:LivetWPFApplication10.ViewModels"
        xmlns:LivetWPFApplication10="clr-namespace:LivetWPFApplication10" x:Class="Views.MainWindow"
        Title="MainWindow" Height="350" Width="525">

    <Window.DataContext>
        <vm:MainWindowViewModel/>
    </Window.DataContext>

    <Window.InputBindings>
        <KeyBinding Key="F1" Command="{Binding MyCommandCommand}" />
    </Window.InputBindings>
    <i:Interaction.Triggers>

        <!--Viewに特別な要件が存在しない限りは、トリガーやアクションの自作にこだわらず積極的にコードビハインドを使いましょう -->
        <!--Viewのコードビハインドは、基本的にView内で完結するロジックとViewModelからのイベントの受信(専用リスナを使用する)に限るとトラブルが少なくなります -->
        <!--Livet1.1からはコードビハインドでViewModelのイベントを受信するためのWeakEventLisnterサポートが追加されています -->

        <!--WindowのContentRenderedイベントのタイミングでViewModelのInitializeメソッドが呼ばれます-->
        <i:EventTrigger EventName="ContentRendered">
            <l:LivetCallMethodAction MethodTarget="{Binding}" MethodName="Initialize"/>
        </i:EventTrigger>

        <!--Windowが閉じたタイミングでViewModelのDisposeメソッドが呼ばれます-->
        <i:EventTrigger EventName="Closed">
            <l:DataContextDisposeAction/>
        </i:EventTrigger>

        <!--WindowのCloseキャンセル処理に対応する場合は、WindowCloseCancelBehaviorの使用を検討してください-->

    </i:Interaction.Triggers>

    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="8" />
            <ColumnDefinition />
            <ColumnDefinition Width="8" />
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="8"/>
            <RowDefinition Height="80"/>
            <RowDefinition />
            <RowDefinition Height="8"/>
        </Grid.RowDefinitions>
        <ListBox Grid.Column="1" Grid.Row="2" 
			SelectedItem="{Binding Person}" DisplayMemberPath="Name" >
            <ListBox.Style>
                <Style TargetType="{x:Type ListBox}">
                    <Setter Property="Background" Value="AliceBlue" />
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding IsCommand}" Value="True">
                            <Setter Property="Background" Value="Beige" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </ListBox.Style>
        </ListBox>
        <LivetWPFApplication10:UserControl1 Grid.Column="1" Grid.Row="2" />
        <Button x:Name="Button1" Grid.Column="1" HorizontalAlignment="Left" Height="46" 
			Margin="381,10,0,0" Grid.Row="1" VerticalAlignment="Top" Width="110" 
			Command="{Binding MyCommandCommand, Mode=OneWay}" IsCancel="True" Content="よろしく(F1)"/>
        <CheckBox Content="コマンド実行可能" Grid.Column="1" HorizontalAlignment="Left" 
			Height="29" Margin="126,27,0,0" Grid.Row="1" VerticalAlignment="Top" 
			Width="204" IsChecked="{Binding IsCommand}"/>
        <Button Content="Button" Grid.Column="1" HorizontalAlignment="Left" Height="29" Margin="295,27,0,0" Grid.Row="1" VerticalAlignment="Top" Width="56" Click="Button_Click"/>
    </Grid>
</Window>